@use "sass:math";

$columns: 12;
$gutter: 16px;
$max-width: 1400px;

$sm-grid: 544px;
$md-grid: 768px;
$lg-grid: 992px;
$xl-grid: 1200px;

$padding-xs: $gutter;
$padding-sm: $gutter * 1.25;
$padding-md: 60px;

@mixin sm {
  @media all and (min-width: $sm-grid) {
    @content;
  }
}

@mixin md {
  @media all and (min-width: $md-grid) {
    @content;
  }
}

@mixin lg {
  @media all and (min-width: $lg-grid) {
    @content;
  }
}

@mixin xl {
  @media all and (min-width: $xl-grid) {
    @content;
  }
}

@mixin xs-max {
  @media all and (max-width: ($sm-grid - 1)) {
    @content;
  }
}

@mixin sm-max {
  @media all and (max-width: ($md-grid - 1)) {
    @content;
  }
}

@mixin width($xs, $sm: 0, $md: 0, $lg: 0, $xl: 0, $padding: $gutter) {
  width: math.div($xs, $columns) * 100%;
  padding-left: $padding * 0.5;
  padding-right: $padding * 0.5;

  @if ($sm > 0) {
    @include sm {
      width: math.div($sm, $columns) * 100%;
    }
  }

  @if ($md > 0) {
    @include md {
      width: math.div($md, $columns) * 100%;
    }
  }

  @if ($lg > 0) {
    @include lg {
      width: math.div($lg, $columns) * 100%;
    }
  }

  @if ($xl > 0) {
    @include xl {
      width: math.div($xl, $columns) * 100%;
    }
  }
}

%padding {
  padding-left: $padding-xs;
  padding-right: $padding-xs;

  @include sm {
    padding-left: $padding-sm;
    padding-right: $padding-sm;
  }

  @include md {
    padding-left: $padding-md;
    padding-right: $padding-md;
  }

  @include lg {
    padding-left: 100px;
    padding-right: 100px;
  }
}

%container-min {
  position: relative;
  margin-left: auto;
  margin-right: auto;
  overflow: hidden;
}

%container {
  @extend %container-min;
  @if ($max-width > 0) {
    max-width: $max-width;
  }
  @extend %padding;
}

%container-full {
  @extend %container-min;
  @extend %padding;
}

%container-col {
  margin-left: -$gutter * 0.5;
  margin-right: -$gutter * 0.5;
}
